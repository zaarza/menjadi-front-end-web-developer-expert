{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/dicoding-restaurant-source.js","webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import config from './config';\n\nconst apiEndpoint = {\n  SEARCH: (query) => `${config.BASE_URL}/search?q=${query}`,\n  LIST: `${config.BASE_URL}/list`,\n  DETAIL: (id) => `${config.BASE_URL}/detail/${id}`,\n  REVIEW: `${config.BASE_URL}/review`,\n  IMAGE: (pictureId, imageSize) => `${config.BASE_URL}/images/${imageSize}/${pictureId}`,\n};\n\nexport default apiEndpoint;\n","import apiEndpoint from '../globals/api-endpoint';\n\nclass DicodingRestaurantSource {\n  static async restaurantList() {\n    const response = await fetch(apiEndpoint.LIST);\n    const responseJson = await response.json();\n    return responseJson;\n  }\n\n  static async restaurantDetail(id) {\n    const response = await fetch(apiEndpoint.DETAIL(id));\n    const responseJson = await response.json();\n    return responseJson;\n  }\n\n  static async restaurantSearch(query) {\n    const response = await fetch(apiEndpoint.SEARCH(query));\n    const responseJson = await response.json();\n    return responseJson;\n  }\n\n  static restaurantImage(pictureId, imageSize) {\n    return apiEndpoint.IMAGE(pictureId, imageSize);\n  }\n\n  static async newReview({ id, name, review }) {\n    const data = {\n      id,\n      name,\n      review,\n    };\n\n    const response = await fetch(apiEndpoint.REVIEW, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  }\n}\n\nexport default DicodingRestaurantSource;\n","/* eslint-disable consistent-return */\nimport { openDB } from 'idb';\nimport config from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = config;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'restaurantId' });\n  },\n});\n\nconst favoriteRestaurantIdb = {\n  async getAllFavoriteRestaurantList() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n\n  async getFavoriteRestaurant(restaurantId) {\n    if (!restaurantId) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, restaurantId);\n  },\n\n  async putFavoriteRestaurant(restaurant) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!restaurant.hasOwnProperty('restaurantId')) {\n      console.log('triggered');\n      return;\n    }\n\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n  },\n\n  async deleteFavoriteRestaurant(restaurantId) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, restaurantId);\n  },\n};\n\nexport default favoriteRestaurantIdb;\n","const config = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\n  DATABASE_NAME: 'restaurant-database',\n  DATABABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'favorite-restaurant',\n};\n\nexport default config;\n","/* eslint-disable no-unused-vars */\nimport '../public/styles/main.css';\nimport '../public/styles/responsive.css';\nimport '../public/styles/loading-circle.css';\nimport App from './views/App';\nimport ServiceWorker from './utils/service-worker';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.querySelector('.hamburger'),\n  content: document.querySelector('.main-content'),\n  navbarLinks: document.querySelector('.navbar__links'),\n});\n\nwindow.addEventListener('load', () => {\n  ServiceWorker();\n  app.renderPage();\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n"],"names":["SEARCH","query","config","LIST","DETAIL","id","REVIEW","IMAGE","pictureId","imageSize","fetch","apiEndpoint","response","json","responseJson","name","review","data","method","headers","body","JSON","stringify","i","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getAllFavoriteRestaurantList","getAll","getFavoriteRestaurant","restaurantId","get","putFavoriteRestaurant","restaurant","hasOwnProperty","console","log","put","deleteFavoriteRestaurant","BASE_URL","DATABABASE_VERSION","app","App","button","document","querySelector","content","navbarLinks","window","addEventListener","ServiceWorker","renderPage"],"sourceRoot":""}